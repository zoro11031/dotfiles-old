# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | j4-dmenu-desktop --dmenu='bemenu -i --nb "#3f3f3f" --nf "#dcdccc" --fn "pango:DejaVu Sans Mono 12"' --term='kitty' | xargs swaymsg exec --
set $menu exec ~/.config/sway/scripts/fuzzel.sh
exec_always nwg-drawer -r -fm nemo
bindsym --release Super_L exec nwg-drawer

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
exec ~/.azotebg
#
# Example configuration:
#
   
   output DP-1 resolution 2560x1440@165hz position 0,0 adaptive_sync on
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#      
	#Names
	set $ws1 1:Home
	set $ws2 2:Social
	set $ws3 3:Study
	set $ws4 4:Games
	set $ws5 5:Computer
	set $ws6 6:Homework
	set $ws7 7:Scratch
	
    # Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Tab  workspace back_and_forth
    workspace back_and_forth yes
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    #Assign programs to specific workspaces
    assign [class="discord"] workspace $ws2
    for_window [class="Spotify"] move window to workspace $ws2
    assign [class="Anki"] workspace $ws3
    assign [class="Steam"] workspace $ws4

#Preset Workflows
	#Default
   bindsym $mod+Control+1 exec /home/petergriffin/.config/sway/scripts/start.sh 
	#Language Learning - Video
	bindsym $mod+Control+2 exec /home/petergriffin/.config/sway/scripts/study.sh
	#Language Learning - Games
    bindsym $mod+Control+3 exec /home/petergriffin/.config/sway/scripts/study-games.sh
    
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
   #bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+s layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
   # status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#    colors {
#       # statusline #ffffff
#       # background #323232
#       # inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

# Notification Daemon
exec swaync

# Toggle control center
bindsym $mod+Shift+n exec swaync-client -t -sw
#Use Waybar

exec waybar

#Lock Screen

#Open File Manager Shortcut
bindsym $mod+e exec nemo


bindsym $mod+Mod1+l exec swaylock -C ~/.config/swaylock/config

#Smart Borders
default_border pixel 3
default_floating_border normal
hide_edge_borders --i3 smart
smart_borders on
smart_gaps on
client.focused #c6a0f6 #f5c2e7b3  #24273a #f5c2e7b3
client.focused_inactive #c6a0f6 #ed879600  #24273a #ed879600
client.unfocused #c6a0f6 #ed879600  #cad3f5 #ed879600
font pango:Roboto Mono Medium 8

#Gaps
gaps inner 5

# Media Keys etc
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec $menu

#Dock
exec_always  nwg-dock -d
exec_always nwg-drawer -fm nemo -term kitty -r

#Gammastep

exec gammastep-indicator

exec_always /bin/autotiling.py

#Polkit (GUI authenticator)

exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

bindsym Control+Shift+Escape exec /bin/gnome-system-monitor

include /etc/sway/config.d/*

include /~/.config/sway/.config.d/*
